<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Problem Service">
      <intProp name="ThreadGroup.num_threads">1000</intProp>
      <intProp name="ThreadGroup.ramp_time">60</intProp>
      <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
        <intProp name="LoopController.loops">-1</intProp>
        <boolProp name="LoopController.continue_forever">false</boolProp>
      </elementProp>
    </ThreadGroup>
    <hashTree>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add">
        <stringProp name="HTTPSampler.domain">localhost</stringProp>
        <stringProp name="HTTPSampler.port">3003</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.path">/solveMyProblem/problems/</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <stringProp name="HTTPSampler.method">POST</stringProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
      </HTTPSamplerProxy>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get All Problems">
        <stringProp name="HTTPSampler.domain">localhost</stringProp>
        <stringProp name="HTTPSampler.port">3003</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.path">/solveMyProblem/problems/</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
      </HTTPSamplerProxy>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get by Id">
        <stringProp name="HTTPSampler.domain">localhost</stringProp>
        <stringProp name="HTTPSampler.port">3003</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.path">/solveMyProblem/problems/:id</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments">
            <elementProp name="" elementType="HTTPArgument">
              <boolProp name="HTTPArgument.always_encode">false</boolProp>
              <stringProp name="Argument.value">{&#xd;
	&quot;problemId&quot;: &quot;${_id}&quot;&#xd;
}&#xd;
</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
      </HTTPSamplerProxy>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config">
        <stringProp name="filename">C:/Users/Gina/OneDrive/Documents/GitHub/saas2024-36/dummy-data/problemDB.problems.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">_id,credits_used,problem_desc.NumEmployees,problem_desc.NumShifts,problem_desc.NumDays,problem_timestamp,problem_state,problem_desc.Locations[0].Latitude,problem_desc.Locations[1].Latitude,problem_desc.Locations[2].Latitude,problem_desc.Locations[0].Longitude,problem_desc.Locations[1].Longitude,problem_desc.Locations[2].Longitude,problem_desc.NumVehicles,problem_desc.DepotIndex,problem_desc.MaxDistance,problem_desc.Values[0],problem_desc.Values[1],problem_desc.Values[2],problem_desc.Values[3],problem_desc.Values[4],problem_desc.Values[5],problem_desc.Values[6],problem_desc.Values[7],problem_desc.Values[8],problem_desc.Values[9],problem_desc.Values[10],problem_desc.Values[11],problem_desc.Values[12],problem_desc.Values[13],problem_desc.Values[14],problem_desc.Values[15],problem_desc.Values[16],problem_desc.Values[17],problem_desc.Values[18],problem_desc.Values[19],problem_desc.Values[20],problem_desc.Values[21],problem_desc.Values[22],problem_desc.Values[23],problem_desc.Values[24],problem_desc.Values[25],problem_desc.Values[26],problem_desc.Values[27],problem_desc.Values[28],problem_desc.Values[29],problem_desc.Values[30],problem_desc.Values[31],problem_desc.Values[32],problem_desc.Values[33],problem_desc.Values[34],problem_desc.Values[35],problem_desc.Values[36],problem_desc.Values[37],problem_desc.Values[38],problem_desc.Values[39],problem_desc.Values[40],problem_desc.Values[41],problem_desc.Values[42],problem_desc.Values[43],problem_desc.Values[44],problem_desc.Values[45],problem_desc.Values[46],problem_desc.Values[47],problem_desc.Values[48],problem_desc.Values[49],problem_desc.Weights[0][0],problem_desc.Weights[0][1],problem_desc.Weights[0][2],problem_desc.Weights[0][3],problem_desc.Weights[0][4],problem_desc.Weights[0][5],problem_desc.Weights[0][6],problem_desc.Weights[0][7],problem_desc.Weights[0][8],problem_desc.Weights[0][9],problem_desc.Weights[0][10],problem_desc.Weights[0][11],problem_desc.Weights[0][12],problem_desc.Weights[0][13],problem_desc.Weights[0][14],problem_desc.Weights[0][15],problem_desc.Weights[0][16],problem_desc.Weights[0][17],problem_desc.Weights[0][18],problem_desc.Weights[0][19],problem_desc.Weights[0][20],problem_desc.Weights[0][21],problem_desc.Weights[0][22],problem_desc.Weights[0][23],problem_desc.Weights[0][24],problem_desc.Weights[0][25],problem_desc.Weights[0][26],problem_desc.Weights[0][27],problem_desc.Weights[0][28],problem_desc.Weights[0][29],problem_desc.Weights[0][30],problem_desc.Weights[0][31],problem_desc.Weights[0][32],problem_desc.Weights[0][33],problem_desc.Weights[0][34],problem_desc.Weights[0][35],problem_desc.Weights[0][36],problem_desc.Weights[0][37],problem_desc.Weights[0][38],problem_desc.Weights[0][39],problem_desc.Weights[0][40],problem_desc.Weights[0][41],problem_desc.Weights[0][42],problem_desc.Weights[0][43],problem_desc.Weights[0][44],problem_desc.Weights[0][45],problem_desc.Weights[0][46],problem_desc.Weights[0][47],problem_desc.Weights[0][48],problem_desc.Weights[0][49],problem_desc.Capacities[0],problem_desc.Costs[0][0],problem_desc.Costs[0][1],problem_desc.Costs[0][2],problem_desc.Costs[0][3],problem_desc.Costs[1][0],problem_desc.Costs[1][1],problem_desc.Costs[1][2],problem_desc.Costs[1][3],problem_desc.Costs[2][0],problem_desc.Costs[2][1],problem_desc.Costs[2][2],problem_desc.Costs[2][3],problem_desc.Costs[3][0],problem_desc.Costs[3][1],problem_desc.Costs[3][2],problem_desc.Costs[3][3],problem_desc.Variables[0],problem_desc.Variables[1],problem_desc.Constraints[0],problem_desc.Constraints[1],problem_desc.Constraints[2],problem_desc.Constraints[3],problem_desc.Constraints[4],problem_desc.Objective,problem_desc.Arcs[0].start_node,problem_desc.Arcs[1].start_node,problem_desc.Arcs[2].start_node,problem_desc.Arcs[3].start_node,problem_desc.Arcs[4].start_node,problem_desc.Arcs[5].start_node,problem_desc.Arcs[6].start_node,problem_desc.Arcs[7].start_node,problem_desc.Arcs[8].start_node,problem_desc.Arcs[0].end_node,problem_desc.Arcs[1].end_node,problem_desc.Arcs[2].end_node,problem_desc.Arcs[3].end_node,problem_desc.Arcs[4].end_node,problem_desc.Arcs[5].end_node,problem_desc.Arcs[6].end_node,problem_desc.Arcs[7].end_node,problem_desc.Arcs[8].end_node,problem_desc.Arcs[0].capacity,problem_desc.Arcs[1].capacity,problem_desc.Arcs[2].capacity,problem_desc.Arcs[3].capacity,problem_desc.Arcs[4].capacity,problem_desc.Arcs[5].capacity,problem_desc.Arcs[6].capacity,problem_desc.Arcs[7].capacity,problem_desc.Arcs[8].capacity,problem_desc.Arcs[0].unit_cost,problem_desc.Arcs[1].unit_cost,problem_desc.Arcs[2].unit_cost,problem_desc.Arcs[3].unit_cost,problem_desc.Arcs[4].unit_cost,problem_desc.Arcs[5].unit_cost,problem_desc.Arcs[6].unit_cost,problem_desc.Arcs[7].unit_cost,problem_desc.Arcs[8].unit_cost,problem_desc.Supplies[0],problem_desc.Supplies[1],problem_desc.Supplies[2],problem_desc.Supplies[3],problem_desc.Supplies[4],problem_desc.board_size,user_id</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
